import {
  LineChart,
  Line,
  CartesianGrid,
  XAxis,
  YAxis,
  Tooltip,
  ResponsiveContainer,
} from "recharts";
import { CustomTooltip } from "~/utils/chartUtils";

interface LineChartPassFailTotalsProps {
  data: BarLineChartDataPoint[];
}

const CustomizedDot = (props: any) => {
  const { cx, cy, stroke, payload, value } = props;
  const passedList = [
    "LOGGED_IN_EMAIL",
    "LOGGED_IN_FACEBOOK",
    "LOGGED_IN_GOOLE",
    "PASS",
  ];
  if (!value) return null;
  if (passedList.indexOf(payload.name) >= 0) {
    return (
      <svg
        x={cx - 10}
        y={cy - 10}
        width={512}
        height={512}
        fill="green"
        viewBox="0 0 1024 1024"
      >
        <ellipse
          className="fill-yellow-200"
          cx="23.07"
          cy="14.99"
          rx="15.22"
          ry="5.24"
        />
        <path
          className="fill-yellow-200"
          d="M38.3,21.8c0,2.89-6.82,5.24-15.23,5.24S7.85,24.69,7.85,21.8"
        />
        <path
          className="fill-yellow-400"
          d="M27.38,33.43c-.4,0-3.9,0-4.31,0-8.41,0-15.22-2.35-15.22-5.24"
        />
        <path
          className="fill-yellow-500"
          d="M24.91,40c-.6,0-1.22,0-1.84,0-8.41,0-15.22-2.34-15.22-5.24"
        />
        <path
          className="fill-yellow-600"
          d="M25.7,46.53a22.48,22.48,0,0,1-2.63.08c-8.41,0-15.22-2.35-15.22-5.24"
        />
        <line x1="7.85" y1="41.42" x2="7.85" y2="15.01" />
        <line x1="38.3" y1="30.01" x2="38.3" y2="14.99" />
        <ellipse
          cx="40.93"
          cy="35.82"
          rx="15.22"
          ry="5.24"
          className="fill-yellow-300"
        />
        <path
          className="fill-yellow-300"
          d="M56.15,42.63c0,2.9-6.81,5.24-15.22,5.24S25.7,45.53,25.7,42.63"
        />
        <path
          className="fill-yellow-500"
          d="M56.15,49c0,2.9-6.81,5.25-15.22,5.25S25.7,51.91,25.7,49"
        />
        <line x1="25.7" y1="48.92" x2="25.7" y2="35.07" />
        <line x1="56.15" y1="49.21" x2="56.15" y2="35.64" />
      </svg>
    );
  }
  return (
    <svg x={cx - 10} y={cy - 10} width={40} height={40} viewBox="0 0 1024 1024">
      <path
        className="fill-zinc-100"
        d="M256.003 9.165h-.005c-107.997 0-195.551 87.551-195.551 195.553v23.035c0 49.974 24.511 94.122 62.062 121.42v93.174c0 33.408 27.083 60.49 60.49 60.49h146.01c33.407 0 60.49-27.083 60.49-60.49v-93.175c37.55-27.297 62.057-71.445 62.057-121.419v-23.035C451.554 96.716 364.004 9.165 256.003 9.165z"
      />
      <path
        className="fill #e1e1e4"
        d="M451.554 227.751v-23.035c0-108-87.55-195.551-195.551-195.551h-.005c-107.997 0-195.551 87.551-195.551 195.553v23.035c0 49.974 24.511 94.122 62.062 121.42v93.174c0 33.407 27.083 60.49 60.49 60.49h146.01c33.407 0 60.49-27.083 60.49-60.49v-93.175c37.548-27.299 62.055-71.446 62.055-121.421zM240.346 387.935c-93.13 0-168.622-75.494-168.622-168.622 0-93.127 75.493-168.621 168.622-168.621s168.622 75.494 168.622 168.621c0 93.129-75.494 168.622-168.622 168.622z"
      />
      <circle className="fill-red-600" cx="177.679" cy="206.909" r="53.278" />
      <circle className="fill-red-600" cx="335.121" cy="206.909" r="53.278" />
      <circle className="fill-red-800" cx="178.082" cy="206.909" r="22.033" />
      <circle className="fill-red-800" cx="335.525" cy="206.909" r="22.356" />
      <path
        className="fill:#787780"
        d="M337.117 439.566a9.165 9.165 0 0 0 9.165-9.165v-27.352h5.801c5.061 0 9.165-4.102 9.165-9.165s-4.103-9.165-9.165-9.165h-5.801v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-21.38v-29.746c0-5.063-4.103-9.165-9.165-9.165s-9.165 4.102-9.165 9.165v29.746h-21.379v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.165 9.165 0 0 0-9.165 9.165v29.746h-21.38v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-21.379v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-12.585c-5.062 0-9.165 4.102-9.165 9.165s4.103 9.165 9.165 9.165h12.585v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.379v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.38v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.379v27.352c0 5.063 4.103 9.165 9.165 9.165s9.165-4.102 9.165-9.165v-27.352h21.38v27.352a9.163 9.163 0 0 0 9.165 9.165z"
      />
      <path
        className="fill:#1c2042"
        d="M451.554 195.551a9.164 9.164 0 0 0-9.165 9.165v23.035c0 44.858-21.787 87.478-58.281 114.006a9.165 9.165 0 0 0-3.776 7.413v93.175c0 28.3-23.024 51.325-51.324 51.325h-146.01c-28.3 0-51.325-23.025-51.325-51.325v-93.174a9.163 9.163 0 0 0-3.776-7.413c-36.496-26.532-58.286-69.152-58.286-114.007v-23.035c0-102.774 83.613-186.386 186.391-186.386 61.557 0 119.095 30.369 153.916 81.235a9.163 9.163 0 0 0 12.739 2.385 9.165 9.165 0 0 0 2.387-12.739C386.806 33.35 323.613 0 255.998 0 143.117 0 51.282 91.836 51.282 204.716v23.035c0 49.133 23.115 95.884 62.062 126.001v88.592c0 38.409 31.246 69.655 69.655 69.655h146.009c38.407 0 69.654-31.247 69.654-69.655V353.75c38.943-30.116 62.057-76.865 62.057-126v-23.035a9.165 9.165 0 0 0-9.165-9.164z"
      />
      <path
        className="fill:#1c2042"
        d="M426.743 129.842a186.122 186.122 0 0 1 3.704 9.079 9.17 9.17 0 0 0 8.577 5.932 9.158 9.158 0 0 0 3.235-.593c4.735-1.787 7.125-7.074 5.339-11.811a203.984 203.984 0 0 0-4.072-9.979 9.165 9.165 0 1 0-16.783 7.372zm-89.626 309.724a9.165 9.165 0 0 0 9.165-9.165v-27.352h5.801c5.061 0 9.165-4.102 9.165-9.165s-4.103-9.165-9.165-9.165h-5.801v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-21.38v-29.746c0-5.063-4.103-9.165-9.165-9.165s-9.165 4.102-9.165 9.165v29.746h-21.379v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.165 9.165 0 0 0-9.165 9.165v29.746h-21.38v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-21.379v-29.746a9.164 9.164 0 0 0-9.165-9.165 9.164 9.164 0 0 0-9.165 9.165v29.746h-12.585c-5.062 0-9.165 4.102-9.165 9.165s4.103 9.165 9.165 9.165h12.585v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.379v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.38v27.352a9.164 9.164 0 0 0 9.165 9.165 9.164 9.164 0 0 0 9.165-9.165v-27.352h21.379v27.352c0 5.063 4.103 9.165 9.165 9.165s9.165-4.102 9.165-9.165v-27.352h21.38v27.352a9.163 9.163 0 0 0 9.165 9.165zm-96.994-234.25c0-34.432-28.012-62.444-62.443-62.444s-62.443 28.012-62.443 62.444 28.012 62.444 62.443 62.444 62.443-28.013 62.443-62.444zm-106.556 0c0-24.324 19.789-44.114 44.113-44.114s44.113 19.789 44.113 44.114-19.789 44.114-44.113 44.114-44.113-19.79-44.113-44.114zm263.997 0c0-34.432-28.012-62.444-62.444-62.444s-62.443 28.012-62.443 62.444 28.012 62.444 62.443 62.444 62.444-28.013 62.444-62.444zm-62.444 44.113c-24.324 0-44.113-19.789-44.113-44.114s19.789-44.114 44.113-44.114c24.324 0 44.114 19.789 44.114 44.114s-19.789 44.114-44.114 44.114z"
      />
    </svg>
  );
};

const LineChartPassFailTotals: React.FC<LineChartPassFailTotalsProps> = ({
  data,
}) => {
  const axisFontColor = "white";
  return (
    <ResponsiveContainer width="100%" height="100%">
      <LineChart
        width={600}
        height={300}
        data={data}
        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}
      >
        <Line
          type="monotone"
          dataKey="uv"
          stroke="#8884d8"
          dot={<CustomizedDot />}
        />
        <CartesianGrid stroke="#cccccc55" strokeDasharray="5 5" />
        <XAxis
          dataKey="name"
          color="black"
          tick={{ stroke: axisFontColor }}
          label={{ value: "" }}
        />
        <YAxis />
        <Tooltip content={<CustomTooltip />} />
      </LineChart>
    </ResponsiveContainer>
  );
};

export default LineChartPassFailTotals;
